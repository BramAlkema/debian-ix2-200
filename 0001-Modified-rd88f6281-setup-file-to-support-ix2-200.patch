From a58d46f089ca9eef75df4b21ded9efaaaee2c689 Mon Sep 17 00:00:00 2001
From: Nigel Roberts <nigel@nobiscuit.com>
Date: Thu, 5 Jul 2012 23:24:36 +1000
Subject: [PATCH] Modified rd88f6281 setup file to support ix2-200

Downloaded from: http://blog.nobiscuit.com/2012/02/15/kernel-patch-to-support-leds-buttons-and-sensors/

---
 arch/arm/mach-kirkwood/rd88f6281-setup.c |  190 ++++++++++++++++++++++--------
 1 file changed, 141 insertions(+), 49 deletions(-)

diff --git a/arch/arm/mach-kirkwood/rd88f6281-setup.c b/arch/arm/mach-kirkwood/rd88f6281-setup.c
index ef92207..ecbb7b0 100644
--- a/arch/arm/mach-kirkwood/rd88f6281-setup.c
+++ b/arch/arm/mach-kirkwood/rd88f6281-setup.c
@@ -17,46 +17,33 @@
 #include <linux/mv643xx_eth.h>
 #include <linux/ethtool.h>
 #include <net/dsa.h>
+#include <linux/gpio.h>
+#include <linux/leds.h>
+#include <linux/gpio_keys.h>
+#include <linux/i2c.h>
+#include <linux/input.h>
 #include <asm/mach-types.h>
 #include <asm/mach/arch.h>
 #include <mach/kirkwood.h>
-#include <plat/mvsdio.h>
 #include "common.h"
 #include "mpp.h"
 
 static struct mtd_partition rd88f6281_nand_parts[] = {
 	{
-		.name = "u-boot",
-		.offset = 0,
-		.size = SZ_1M
-	}, {
 		.name = "uImage",
-		.offset = MTDPART_OFS_NXTBLK,
-		.size = SZ_2M
+		.offset = 0x100000,
+		.size = 0x300000
 	}, {
-		.name = "root",
+		.name = "uInitrd",
 		.offset = MTDPART_OFS_NXTBLK,
-		.size = MTDPART_SIZ_FULL
+		.size = 0x300000,
 	},
 };
 
 static struct mv643xx_eth_platform_data rd88f6281_ge00_data = {
-	.phy_addr	= MV643XX_ETH_PHY_NONE,
-	.speed		= SPEED_1000,
-	.duplex		= DUPLEX_FULL,
-};
-
-static struct dsa_chip_data rd88f6281_switch_chip_data = {
-	.port_names[0]	= "lan1",
-	.port_names[1]	= "lan2",
-	.port_names[2]	= "lan3",
-	.port_names[3]	= "lan4",
-	.port_names[5]	= "cpu",
-};
-
-static struct dsa_platform_data rd88f6281_switch_plat_data = {
-	.nr_chips	= 1,
-	.chip		= &rd88f6281_switch_chip_data,
+	.phy_addr       = MV643XX_ETH_PHY_NONE,
+	.speed          = SPEED_1000,
+	.duplex         = DUPLEX_FULL,
 };
 
 static struct mv643xx_eth_platform_data rd88f6281_ge01_data = {
@@ -67,19 +54,138 @@ static struct mv_sata_platform_data rd88f6281_sata_data = {
 	.n_ports	= 2,
 };
 
-static struct mvsdio_platform_data rd88f6281_mvsdio_data = {
-	.gpio_card_detect = 28,
+/*****************************************************************************
+ * LEDs attached to GPIO
+ ****************************************************************************/
+
+static struct gpio_led rd88f6281_led_pins[] = {
+	{
+		.name			= "power_led",
+		.gpio			= 16,
+		.default_trigger	= "default-on",
+	},
+	{
+		.name			= "rebuild_led",
+		.gpio			= 36,
+		.default_trigger	= "none",
+	},
+	{
+		.name			= "health_led",
+		.gpio			= 37,
+		.default_trigger	= "none",
+	},
+	{
+		.name			= "backup_led",
+		.gpio			= 15,
+		.default_trigger	= "none",
+	},
+
+};
+
+#define ORION_BLINK_HALF_PERIOD 100 /* ms */
+
+int rd88f6281_gpio_blink_set(unsigned gpio, int state,
+	unsigned long *delay_on, unsigned long *delay_off)
+{
+	orion_gpio_set_blink(gpio, state);
+	return 0;
+}
+
+
+static struct gpio_led_platform_data rd88f6281_led_data = {
+	.leds		= rd88f6281_led_pins,
+	.num_leds	= ARRAY_SIZE(rd88f6281_led_pins),
+	.gpio_blink_set = (void*)rd88f6281_gpio_blink_set,
+};
+
+static struct platform_device rd88f6281_leds = {
+	.name	= "leds-gpio",
+	.id	= -1,
+	.dev	= {
+		.platform_data	= &rd88f6281_led_data,
+	}
+};
+
+/****************************************************************************
+ * GPIO Attached Keys
+ ****************************************************************************/
+
+#define RD88F6281_GPIO_KEY_RESET	12
+#define RD88F6281_GPIO_KEY_POWER	14
+#define RD88F6281_GPIO_KEY_OTB		35
+
+#define RD88F6281_SW_RESET	0x00
+#define RD88F6281_SW_POWER	0x01
+#define RD88F6281_SW_OTB	0x02
+
+static struct gpio_keys_button rd88f6281_buttons[] = {
+	{
+		.type		= EV_SW,
+		.code	   = RD88F6281_SW_RESET,
+		.gpio	   = RD88F6281_GPIO_KEY_RESET,
+		.desc	   = "Reset Button",
+		.active_low     = 1,
+		.debounce_interval = 100,
+	}, 
+	{
+		.type		= EV_SW,
+		.code	   = RD88F6281_SW_POWER,
+		.gpio	   = RD88F6281_GPIO_KEY_POWER,
+		.desc	   = "Power Button",
+		.active_low     = 1,
+		.debounce_interval = 100,
+	},
+	{
+		.type		= EV_SW,
+		.code	   = RD88F6281_SW_OTB,
+		.gpio	   = RD88F6281_GPIO_KEY_OTB,
+		.desc	   = "OTB Button",
+		.active_low     = 1,
+		.debounce_interval = 100,
+	},
+
+};
+
+static struct gpio_keys_platform_data rd88f6281_button_data = {
+	.buttons	= rd88f6281_buttons,
+	.nbuttons       = ARRAY_SIZE(rd88f6281_buttons),
 };
 
+static struct platform_device rd88f6281_button_device = {
+	.name	   = "gpio-keys",
+	.id	     = -1,
+	.num_resources  = 0,
+	.dev	    = {
+		.platform_data  = &rd88f6281_button_data,
+	},
+};
 static unsigned int rd88f6281_mpp_config[] __initdata = {
-	MPP28_GPIO,
+	MPP12_GPIO,                             /* Reset Button */
+	MPP14_GPIO,                             /* Power Button */
+	MPP15_GPIO,                             /* Backup LED (blue) */
+	MPP16_GPIO,                             /* Power LED (white) */
+	MPP35_GPIO,                             /* OTB Button */
+	MPP36_GPIO,                             /* Rebuild LED (white) */
+	MPP37_GPIO,                             /* Health LED (red) */
+	MPP38_GPIO,                             /* SATA LED brightness control 1 */
+	MPP39_GPIO,                             /* SATA LED brightness control 2 */
+	MPP40_GPIO,                             /* Backup LED brightness control 1 */
+	MPP41_GPIO,                             /* Backup LED brightness control 2 */
+	MPP42_GPIO,                             /* Power LED brightness control 1 */
+	MPP43_GPIO,                             /* Power LED brightness control 2 */
+	MPP44_GPIO,                             /* Health LED brightness control 1 */
+	MPP45_GPIO,                             /* Health LED brightness control 2 */
+	MPP46_GPIO,                             /* Rebuild LED brightness control 1 */
+	MPP47_GPIO,                             /* Rebuild LED brightness control 2 */
 	0
 };
 
+static struct i2c_board_info __initdata rd88f6281_i2c = {
+	I2C_BOARD_INFO("lm63", 0x4c),
+};
+
 static void __init rd88f6281_init(void)
 {
-	u32 dev, rev;
-
 	/*
 	 * Basic setup. Needs to be called early.
 	 */
@@ -90,29 +196,15 @@ static void __init rd88f6281_init(void)
 	kirkwood_ehci_init();
 
 	kirkwood_ge00_init(&rd88f6281_ge00_data);
-	kirkwood_pcie_id(&dev, &rev);
-	if (rev == MV88F6281_REV_A0) {
-		rd88f6281_switch_chip_data.sw_addr = 10;
-		kirkwood_ge01_init(&rd88f6281_ge01_data);
-	} else {
-		rd88f6281_switch_chip_data.port_names[4] = "wan";
-	}
-	kirkwood_ge00_switch_init(&rd88f6281_switch_plat_data, NO_IRQ);
-
+	kirkwood_ge01_init(&rd88f6281_ge01_data);
 	kirkwood_sata_init(&rd88f6281_sata_data);
-	kirkwood_sdio_init(&rd88f6281_mvsdio_data);
+	platform_device_register(&rd88f6281_leds);
+	platform_device_register(&rd88f6281_button_device);
 	kirkwood_uart0_init();
+	kirkwood_i2c_init();
+	i2c_register_board_info(0, &rd88f6281_i2c, 1);
 }
 
-static int __init rd88f6281_pci_init(void)
-{
-	if (machine_is_rd88f6281())
-		kirkwood_pcie_init(KW_PCIE0);
-
-	return 0;
-}
-subsys_initcall(rd88f6281_pci_init);
-
 MACHINE_START(RD88F6281, "Marvell RD-88F6281 Reference Board")
 	/* Maintainer: Saeed Bishara <saeed@marvell.com> */
 	.atag_offset	= 0x100,
-- 
1.7.9.5

